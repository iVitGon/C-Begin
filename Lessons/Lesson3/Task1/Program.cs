/*
int n = 5;

int i = 1;

while (i <= n)
{
    int quad = i * i;
    if (i < n)
    {

        Console.Write($"{quad}, ");
        i = i + 1;
    }
    else
    {
        Console.Write($"{quad}");
        i = i + 1;
    }
}
/*
int Square(int value)//, где перед именем метода Square стоит тип ВОЗВРАЩАЕМОГО методом значения
                     // в скобках - передаваемые методу аргументы
{
    int result = value * value;
    return result;
}

void ShowSquare (int value) // тип возвращаемого значеня void - пустота, т.е. резуальтаты метода не возвращаются
                            // вывод на экран НЕРАВНО возращению результата
{
    int result = value * value; // переменные созданные внутри метода "живут" лишь внутри метода 
    Console.Write(result);

}

*/

// Создать функцию, которая будет производить вычисления a * b / c + d
// 1. Что делает функция? 
       //Т.е. из чего будет состоять ее тело: произведение в числителе, затем сложение в знаменателе
       //затем деление числителя на знаменатель
// 2. Какие данные ей нужны для работы?
       // Значеня переменных a, b, c, d
// 3. Что будет результатом работы?
       // Возвращаемое или нет значение. Формулы обычно имеют возращаемое значение

double CalcFormula (int a, int b, int c, int d)
{
    double numenator = a * b; // один из операндов должен иметь тот же тип данных, что и результат
    int denometor = c + d;
    double result = numenator / denometor; // тип данных должен быть как у возвращаемого значения метода
    return result; 
}

CalcFormula(4,5,7,8); // для вызова указываем ее название и передаем значения(входные параметры, аргументы)

double result = CalcFormula(4, 5, 7, 8);
System.Console.WriteLine(result);